{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/repos/pomodoro-clock/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Break from \"./components/Break\";\nimport Session from \"./components/Session\";\nimport TimeLeft from \"./components/TimeLeft\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const audioElement = useRef(null);\n  const [currentSessionType, setCurrentSessionType] = useState(\"Session\");\n  const [intervalId, setIntervalId] = useState(null);\n  const [breakLength, setBreakLength] = useState(300);\n  const [sessionLength, setSessionLength] = useState(60 * 25);\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n  useEffect(() => {\n    setTimeLeft(sessionLength);\n  }, [sessionLength]);\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength > 0) {\n      setBreakLength(newBreakLength);\n    }\n  };\n  const incrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength + 60;\n    if (newBreakLength <= 60 * 60) {\n      setBreakLength(newBreakLength);\n    }\n  };\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60;\n    if (newSessionLength > 0) {\n      setSessionLength(newSessionLength);\n    }\n  };\n  const incrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength + 60;\n    if (newSessionLength <= 60 * 60) {\n      setSessionLength(newSessionLength);\n    }\n  };\n  const isStarted = intervalId != null;\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1;\n          if (newTimeLeft >= 0) {\n            return newTimeLeft;\n          }\n          audioElement.current.play();\n          if (currentSessionType === \"Session\") {\n            setCurrentSessionType(\"Break\");\n            return breakLength;\n          } else if (currentSessionType === \"Break\") {\n            setCurrentSessionType(\"Session\");\n            return sessionLength;\n          }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  };\n  const handleResetButtonClick = () => {\n    audioElement.current.load();\n    clearInterval(intervalId);\n    setIntervalId(null);\n    setCurrentSessionType(\"Session\");\n    setSessionLength(25 * 60);\n    setBreakLength(5 * 60);\n    setTimeLeft(25 * 60);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen items-center justify-center bg-green-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full justify-around\",\n      children: [/*#__PURE__*/_jsxDEV(Break, {\n        breakLength: breakLength,\n        decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n        incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeLeft, {\n        handleResetButtonClick: handleResetButtonClick,\n        timerLabel: currentSessionType,\n        handleStartStopClick: handleStartStopClick,\n        startStopButtonLabel: isStarted ? \"Stop\" : \"Start\",\n        timeLeft: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Session, {\n        sessionLength: sessionLength,\n        decrementSessionLengthByOneMinute: decrementSessionLengthByOneMinute,\n        incrementSessionLengthByOneMinute: incrementSessionLengthByOneMinute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"beep\",\n      ref: audioElement,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"https://onlineclock.net/audio/options/default.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IaLM5TDJ2tA6v8syQwPHA/sN+sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Break","Session","TimeLeft","App","audioElement","currentSessionType","setCurrentSessionType","intervalId","setIntervalId","breakLength","setBreakLength","sessionLength","setSessionLength","timeLeft","setTimeLeft","decrementBreakLengthByOneMinute","newBreakLength","incrementBreakLengthByOneMinute","decrementSessionLengthByOneMinute","newSessionLength","incrementSessionLengthByOneMinute","isStarted","handleStartStopClick","clearInterval","newIntervalId","setInterval","prevTimeLeft","newTimeLeft","current","play","handleResetButtonClick","load"],"sources":["/Users/brandon/repos/pomodoro-clock/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Break from \"./components/Break\";\nimport Session from \"./components/Session\";\nimport TimeLeft from \"./components/TimeLeft\";\n\nfunction App() {\n  const audioElement = useRef(null);\n  const [currentSessionType, setCurrentSessionType] = useState(\"Session\");\n  const [intervalId, setIntervalId] = useState(null);\n  const [breakLength, setBreakLength] = useState(300);\n  const [sessionLength, setSessionLength] = useState(60 * 25);\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n  useEffect(() => {\n    setTimeLeft(sessionLength);\n  }, [sessionLength]);\n\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength > 0) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength + 60;\n    if (newBreakLength <= 60 * 60) {\n      setBreakLength(newBreakLength)\n    }\n  };\n\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60;\n    if (newSessionLength > 0) {\n      setSessionLength(newSessionLength);\n    }\n  };\n\n  const incrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength + 60\n    if (newSessionLength <= 60 * 60){\n      setSessionLength(newSessionLength)\n    }\n  };\n\n  const isStarted = intervalId != null;\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const newIntervalId = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          const newTimeLeft = prevTimeLeft - 1;\n          if (newTimeLeft >= 0) {\n            return newTimeLeft;\n          }\n\n          audioElement.current.play();\n\n          if (currentSessionType === \"Session\") {\n            setCurrentSessionType(\"Break\");\n            return breakLength;\n          } else if (currentSessionType === \"Break\") {\n            setCurrentSessionType(\"Session\");\n            return sessionLength;\n          }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  };\n\n  const handleResetButtonClick = () => {\n    audioElement.current.load()\n    clearInterval(intervalId);\n    setIntervalId(null);\n    setCurrentSessionType(\"Session\");\n    setSessionLength(25 * 60);\n    setBreakLength(5 * 60);\n    setTimeLeft(25 * 60);\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen items-center justify-center bg-green-700\">\n      <div className=\"flex w-full justify-around\">\n        <Break\n          breakLength={breakLength}\n          decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n          incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n        />\n        <TimeLeft\n        handleResetButtonClick={handleResetButtonClick}\n          timerLabel={currentSessionType}\n          handleStartStopClick={handleStartStopClick}\n          startStopButtonLabel={isStarted? \"Stop\" : \"Start\"}\n          timeLeft={timeLeft}\n        />\n        <Session\n          sessionLength={sessionLength}\n          decrementSessionLengthByOneMinute={decrementSessionLengthByOneMinute}\n          incrementSessionLengthByOneMinute={incrementSessionLengthByOneMinute}\n        />\n      </div>\n      <audio id=\"beep\" ref={audioElement}>\n        <source src=\"https://onlineclock.net/audio/options/default.mp3\" type=\"audio/mpeg\" />\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}