{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/repos/pomodoro-clock/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentSessionType, setCurrentSessionType] = useState('Session');\n  const [intervalId, setIntervalId] = useState(null);\n  const [breakLength, setBreakLength] = useState(300);\n  const [sessionLength, setSessionLength] = useState(60 * 25);\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n  // change timeLeft whenever sessionLength changes\n  useEffect(() => {\n    setTimeLeft(sessionLength);\n  }, [sessionLength]);\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength < 0) {\n      setBreakLength(0);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n  const incrementBreakLengthByOneMinute = () => {\n    setBreakLength(breakLength + 60);\n  };\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60;\n    if (newSessionLength < 0) {\n      setSessionLength(0);\n    } else {\n      setSessionLength(newSessionLength);\n    }\n  };\n  const incrementSessionLengthByOneMinute = () => {\n    setSessionLength(sessionLength + 60);\n  };\n  const isStarted = intervalId != null;\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      // use start button as stop button if timer running using clearInterval\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      // decrement timeLeft by one every second (1000ms) using setInterval\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1;\n          if (newTimeLeft >= 0) {\n            return prevTimeLeft - 1;\n          }\n          // if session switch the break and vice versa\n          if (currentSessionType == 'Session') {\n            setCurrentSessionType('Break');\n            setTimeLeft(breakLength);\n          } else if (currentSessionType == 'Break') {\n            setCurrentSessionType('Session');\n            setTimeLeft(sessionLength);\n          }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  };\n  const handleResetButtonClick = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n    setCurrentSessionType('Session');\n    setSessionLength(25 * 60);\n    setBreakLength(5 * 60);\n    setTimeLeft(25 * 60);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Break, {\n      breakLength: breakLength,\n      decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n      incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimeLeft, {\n      breakLength: breakLength,\n      sessionLength: sessionLength,\n      timerLabel: currentSessionType,\n      handleStartStopClick: handleStartStopClick,\n      startStopButtonLabel: isStarted ? 'Stop' : 'Stop',\n      timeLeft: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Session, {\n      sessionLength: sessionLength,\n      decrementSessionLengthByOneMinute: decrementSessionLengthByOneMinute,\n      incrementSessionLengthByOneMinute: incrementSessionLengthByOneMinute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"II9Nk6y1y1zEfvTt4tzda4wGVwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Break","Session","TimeLeft","App","currentSessionType","setCurrentSessionType","intervalId","setIntervalId","breakLength","setBreakLength","sessionLength","setSessionLength","timeLeft","setTimeLeft","decrementBreakLengthByOneMinute","newBreakLength","incrementBreakLengthByOneMinute","decrementSessionLengthByOneMinute","newSessionLength","incrementSessionLengthByOneMinute","isStarted","handleStartStopClick","clearInterval","newIntervalId","setInterval","prevTimeLeft","newTimeLeft","handleResetButtonClick"],"sources":["/Users/brandon/repos/pomodoro-clock/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\n\nfunction App() {\n  const [currentSessionType, setCurrentSessionType] = useState('Session');\n  const [intervalId, setIntervalId] = useState(null);\n  const [breakLength, setBreakLength] = useState(300);\n  const [sessionLength, setSessionLength] = useState(60 * 25);\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n  // change timeLeft whenever sessionLength changes\n  useEffect(() => {\n      setTimeLeft(sessionLength);\n  }, [sessionLength]);\n\n  const decrementBreakLengthByOneMinute = () => {\n      const newBreakLength = breakLength - 60;\n      if (newBreakLength < 0) {\n          setBreakLength(0);\n      } else {\n          setBreakLength(newBreakLength);\n      }\n  }\n\n  const incrementBreakLengthByOneMinute = () => {\n      setBreakLength(breakLength + 60);\n  }\n\n  const decrementSessionLengthByOneMinute = () => {\n      const newSessionLength = sessionLength - 60;\n      if (newSessionLength < 0) {\n          setSessionLength(0);\n      } else {\n          setSessionLength(newSessionLength);\n      }\n  }\n\n  const incrementSessionLengthByOneMinute = () => {\n      setSessionLength(sessionLength + 60);\n  }\n\n  const isStarted = intervalId != null;\n  const handleStartStopClick = () => {\n      if (isStarted) {\n          // use start button as stop button if timer running using clearInterval\n          clearInterval(intervalId);\n          setIntervalId(null);\n      } else {\n          // decrement timeLeft by one every second (1000ms) using setInterval\n          const newIntervalId = setInterval(() => {\n              setTimeLeft(prevTimeLeft => {\n                  const newTimeLeft = prevTimeLeft - 1;\n                  if (newTimeLeft >= 0) {\n                      return prevTimeLeft - 1;\n                  }\n                  // if session switch the break and vice versa\n                  if (currentSessionType == 'Session') {\n                      setCurrentSessionType('Break');\n                      setTimeLeft(breakLength);\n                  } else if (currentSessionType == 'Break') {\n                      setCurrentSessionType('Session');\n                      setTimeLeft(sessionLength);\n                  }\n              });\n          }, 100);\n          setIntervalId(newIntervalId);\n      }\n  }\n\n  const handleResetButtonClick = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n    setCurrentSessionType('Session');\n    setSessionLength(25 * 60);\n    setBreakLength(5 * 60);\n    setTimeLeft(25 * 60);\n  }\n\n  return (\n    <div className=\"App\">\n      <Break\n        breakLength={breakLength}\n        decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n        incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n      />\n      <TimeLeft\n        breakLength={breakLength}\n        sessionLength={sessionLength}\n        timerLabel={currentSessionType}\n        handleStartStopClick={handleStartStopClick}\n        startStopButtonLabel={isStarted ? 'Stop' : 'Stop'}\n        timeLeft={timeLeft}\n      />\n      <Session\n        sessionLength={sessionLength}\n        decrementSessionLengthByOneMinute={decrementSessionLengthByOneMinute}\n        incrementSessionLengthByOneMinute={incrementSessionLengthByOneMinute}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EACvE,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;EAC3D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACY,aAAa,CAAC;;EAEvD;EACAX,SAAS,CAAC,MAAM;IACZc,WAAW,CAACH,aAAa,CAAC;EAC9B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMI,+BAA+B,GAAG,MAAM;IAC1C,MAAMC,cAAc,GAAGP,WAAW,GAAG,EAAE;IACvC,IAAIO,cAAc,GAAG,CAAC,EAAE;MACpBN,cAAc,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACHA,cAAc,CAACM,cAAc,CAAC;IAClC;EACJ,CAAC;EAED,MAAMC,+BAA+B,GAAG,MAAM;IAC1CP,cAAc,CAACD,WAAW,GAAG,EAAE,CAAC;EACpC,CAAC;EAED,MAAMS,iCAAiC,GAAG,MAAM;IAC5C,MAAMC,gBAAgB,GAAGR,aAAa,GAAG,EAAE;IAC3C,IAAIQ,gBAAgB,GAAG,CAAC,EAAE;MACtBP,gBAAgB,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACHA,gBAAgB,CAACO,gBAAgB,CAAC;IACtC;EACJ,CAAC;EAED,MAAMC,iCAAiC,GAAG,MAAM;IAC5CR,gBAAgB,CAACD,aAAa,GAAG,EAAE,CAAC;EACxC,CAAC;EAED,MAAMU,SAAS,GAAGd,UAAU,IAAI,IAAI;EACpC,MAAMe,oBAAoB,GAAG,MAAM;IAC/B,IAAID,SAAS,EAAE;MACX;MACAE,aAAa,CAAChB,UAAU,CAAC;MACzBC,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACH;MACA,MAAMgB,aAAa,GAAGC,WAAW,CAAC,MAAM;QACpCX,WAAW,CAACY,YAAY,IAAI;UACxB,MAAMC,WAAW,GAAGD,YAAY,GAAG,CAAC;UACpC,IAAIC,WAAW,IAAI,CAAC,EAAE;YAClB,OAAOD,YAAY,GAAG,CAAC;UAC3B;UACA;UACA,IAAIrB,kBAAkB,IAAI,SAAS,EAAE;YACjCC,qBAAqB,CAAC,OAAO,CAAC;YAC9BQ,WAAW,CAACL,WAAW,CAAC;UAC5B,CAAC,MAAM,IAAIJ,kBAAkB,IAAI,OAAO,EAAE;YACtCC,qBAAqB,CAAC,SAAS,CAAC;YAChCQ,WAAW,CAACH,aAAa,CAAC;UAC9B;QACJ,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;MACPH,aAAa,CAACgB,aAAa,CAAC;IAChC;EACJ,CAAC;EAED,MAAMI,sBAAsB,GAAG,MAAM;IACnCL,aAAa,CAAChB,UAAU,CAAC;IACzBC,aAAa,CAAC,IAAI,CAAC;IACnBF,qBAAqB,CAAC,SAAS,CAAC;IAChCM,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;IACzBF,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC;IACtBI,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,KAAK;MACJ,WAAW,EAAEL,WAAY;MACzB,+BAA+B,EAAEM,+BAAgC;MACjE,+BAA+B,EAAEE;IAAgC;MAAA;MAAA;MAAA;IAAA,QACjE,eACF,QAAC,QAAQ;MACP,WAAW,EAAER,WAAY;MACzB,aAAa,EAAEE,aAAc;MAC7B,UAAU,EAAEN,kBAAmB;MAC/B,oBAAoB,EAAEiB,oBAAqB;MAC3C,oBAAoB,EAAED,SAAS,GAAG,MAAM,GAAG,MAAO;MAClD,QAAQ,EAAER;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,eACF,QAAC,OAAO;MACN,aAAa,EAAEF,aAAc;MAC7B,iCAAiC,EAAEO,iCAAkC;MACrE,iCAAiC,EAAEE;IAAkC;MAAA;MAAA;MAAA;IAAA,QACrE;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAjGQhB,GAAG;AAAA,KAAHA,GAAG;AAmGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}