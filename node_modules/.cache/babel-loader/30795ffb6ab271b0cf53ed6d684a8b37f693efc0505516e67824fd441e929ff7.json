{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/repos/pomodoro-clock/src/components/TimeLeft.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmomentDurationFormatSetup(moment);\nconst TimeLeft = props => {\n  _s();\n  const {\n    sessionLength,\n    breakLength\n  } = props;\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n  // change timeLeft whenever sessionLength changes\n  useEffect(() => {\n    setTimeLeft(sessionLength);\n  }, [sessionLength]);\n  const isStarted = intervalId != null;\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      // use start button as stop button if timer running using clearInterval\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      // decrement timeLeft by one every second (1000ms) using setInterval\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1;\n          if (newTimeLeft >= 0) {\n            return prevTimeLeft - 1;\n          }\n          // if session switch the break and vice versa\n          if (currentSessionType == 'Session') {\n            setCurrentSessionType('Break');\n            setTimeLeft(breakLength);\n          } else if (currentSessionType == 'Break') {\n            setCurrentSessionType('Session');\n            setTimeLeft(sessionLength);\n          }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  };\n  const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', {\n    trim: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"timer-label\",\n      children: currentSessionType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"time-left\",\n      children: formattedTimeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStopClick,\n      children: isStarted ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(TimeLeft, \"wCr4DnvNulB+WbpbFnNZNIa/qJY=\");\n_c = TimeLeft;\nexport default TimeLeft;\nvar _c;\n$RefreshReg$(_c, \"TimeLeft\");","map":{"version":3,"names":["React","useState","useEffect","moment","momentDurationFormatSetup","TimeLeft","props","sessionLength","breakLength","timeLeft","setTimeLeft","isStarted","intervalId","handleStartStopClick","clearInterval","setIntervalId","newIntervalId","setInterval","prevTimeLeft","newTimeLeft","currentSessionType","setCurrentSessionType","formattedTimeLeft","duration","format","trim"],"sources":["/Users/brandon/repos/pomodoro-clock/src/components/TimeLeft.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\n\nmomentDurationFormatSetup(moment)\n\nconst TimeLeft = (props) => {\n    const {\n        sessionLength,\n        breakLength,\n    } = props;\n\n    const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n    // change timeLeft whenever sessionLength changes\n    useEffect(() => {\n        setTimeLeft(sessionLength);\n    }, [sessionLength]);\n\n    const isStarted = intervalId != null;\n    const handleStartStopClick = () => {\n        if (isStarted) {\n            // use start button as stop button if timer running using clearInterval\n            clearInterval(intervalId);\n            setIntervalId(null);\n        } else {\n            // decrement timeLeft by one every second (1000ms) using setInterval\n            const newIntervalId = setInterval(() => {\n                setTimeLeft(prevTimeLeft => {\n                    const newTimeLeft = prevTimeLeft - 1;\n                    if (newTimeLeft >= 0) {\n                        return prevTimeLeft - 1;\n                    }\n                    // if session switch the break and vice versa\n                    if (currentSessionType == 'Session') {\n                        setCurrentSessionType('Break');\n                        setTimeLeft(breakLength);\n                    } else if (currentSessionType == 'Break') {\n                        setCurrentSessionType('Session');\n                        setTimeLeft(sessionLength);\n                    }\n                });\n            }, 100);\n            setIntervalId(newIntervalId);\n        }\n    }\n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', { trim: false });\n    return (\n        <div>\n            <p id=\"timer-label\">{currentSessionType}</p>\n            <p id=\"time-left\">{formattedTimeLeft}</p>\n            <button onClick={handleStartStopClick}>{isStarted? 'Stop' : 'Start'}</button>\n        </div>\n    )\n}\n\nexport default TimeLeft;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,yBAAyB,MAAM,wBAAwB;AAAC;AAE/DA,yBAAyB,CAACD,MAAM,CAAC;AAEjC,MAAME,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM;IACFC,aAAa;IACbC;EACJ,CAAC,GAAGF,KAAK;EAET,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACM,aAAa,CAAC;;EAEvD;EACAL,SAAS,CAAC,MAAM;IACZQ,WAAW,CAACH,aAAa,CAAC;EAC9B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMI,SAAS,GAAGC,UAAU,IAAI,IAAI;EACpC,MAAMC,oBAAoB,GAAG,MAAM;IAC/B,IAAIF,SAAS,EAAE;MACX;MACAG,aAAa,CAACF,UAAU,CAAC;MACzBG,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACH;MACA,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAM;QACpCP,WAAW,CAACQ,YAAY,IAAI;UACxB,MAAMC,WAAW,GAAGD,YAAY,GAAG,CAAC;UACpC,IAAIC,WAAW,IAAI,CAAC,EAAE;YAClB,OAAOD,YAAY,GAAG,CAAC;UAC3B;UACA;UACA,IAAIE,kBAAkB,IAAI,SAAS,EAAE;YACjCC,qBAAqB,CAAC,OAAO,CAAC;YAC9BX,WAAW,CAACF,WAAW,CAAC;UAC5B,CAAC,MAAM,IAAIY,kBAAkB,IAAI,OAAO,EAAE;YACtCC,qBAAqB,CAAC,SAAS,CAAC;YAChCX,WAAW,CAACH,aAAa,CAAC;UAC9B;QACJ,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;MACPQ,aAAa,CAACC,aAAa,CAAC;IAChC;EACJ,CAAC;EAED,MAAMM,iBAAiB,GAAGnB,MAAM,CAACoB,QAAQ,CAACd,QAAQ,EAAE,GAAG,CAAC,CAACe,MAAM,CAAC,OAAO,EAAE;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC;EACzF,oBACI;IAAA,wBACI;MAAG,EAAE,EAAC,aAAa;MAAA,UAAEL;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5C;MAAG,EAAE,EAAC,WAAW;MAAA,UAAEE;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eACzC;MAAQ,OAAO,EAAET,oBAAqB;MAAA,UAAEF,SAAS,GAAE,MAAM,GAAG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3E;AAEd,CAAC;AAAA,GAjDKN,QAAQ;AAAA,KAARA,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}